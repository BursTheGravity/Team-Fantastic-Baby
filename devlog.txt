Team Fantastic Baby -- Leo Au-Yeung, Sungbin Kim
Project -- Pokemon: Fantastic Version
 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================

TEMPLATE FOR DEVLOG:

Date: yyyy-mm-dd
--------------------------------------------------------------

User:
Changes:

==============================================================

Date: 2016-01-11
--------------------------------------------------------------

User: Leo Au-Yeung
Changes: 
- created Game.java which will run the game with a play() function
- added prompts in game.java to prompt user for gender/name
- fixed Player.java mutators/accessors
- added startupMsg, promptStarter, & fixed play functionality
- created 2 WIP methods to displayMap & executeControl
- created first Pokemon: Charmander.java !
- created corresponding Bulbasaur.java & Squirtle.java !
- created package 'Pokedex' for all Pokemon, including Pokemon.java

*For game to run, Pokemon.java & other corresponding Pokemon
java files must be in a folder named 'Pokedex'

==============================================================

Date: 2016-01-12
--------------------------------------------------------------

User: Sungbin Kim
Changes:
- created Tile.java, which will constitute Map.java that will
govern player's movement
- revised Map.java accordingly
- used command prompt to enable the interaction with the player
on command line

Obstacles:
- could not find a way to clear the console from a running java
program.
- should think about how to create a diversity of map with
different structures.
- pressing enter every time to move is annoying, but cannot think
of another way.

==============================================================

Date: 2016-01-12
--------------------------------------------------------------

User: Leo Au-Yeung
Changes:
- added clearDisplay in Game.java to "clear" screen
	- removed clearMap from Map.java
- worked on executeControl in Game.java:
	- contains flag checking for a valid command
	- checks whether in battle or not
	- applies given command, setting validCommand to true
- added displayCommands to display available commands which
depends on whether a player is in battle or not
- created Battle.java which will govern/display battles

==============================================================

Date: 2016-01-13
--------------------------------------------------------------

User: Sungbin Kim
Changes:
- Changed Player.java to "static" to allow Game.java to refer to its methods without the need of initialization.
- Changed Map.java and Player.java accordingly
	- eventually both are static, however, this does not affect the functionality
- Incorporated display of map in Game.java
- Began to try some type differentiation in Tile.java; ex) grass, wall

Obstacles:
- How to refer to methods in Player.java when a player has not yet been initialized. -> Player.java Static(?)
	- solved
- When "invalid command" the program doesnt end (just a blank screen). What is supposed to happen, Leo?
==============================================================

Date: 2016-01-13
--------------------------------------------------------------

User: Leo Au-Yeung
Changes:
- FIXED INVALID COMMANDS TO CHECK COMMANDS PROPERLY
- added arraylists of valid commands in/out of battle
- implemented displaying of valid commands (hard coded)

==============================================================

Date: 2016-01-14
--------------------------------------------------------------

User: Sungbin Kim
Changes:
- Implemented a test version of Battle
- updated other classes accordingly
	- switched the order of in and out of battle commands in "executeCommand" method
		- Maybe this wasn't necessary
- handled a little bit of escaping feature

==============================================================

Date: 2016-01-14
--------------------------------------------------------------

User: Leo Au-Yeung
Changes:
- successfully implemented arraylist of Pokemon
	- can now display all 6 captured Pokemon 
		** make it so it doesn't clear the screen when we do it
	- can get any variables of the Pokemon if needed

Problems:
- the clear display thing doesn't work; don't focus on it tho
** check to-do list for your stuff

==============================================================

Date: 2016-01-14
--------------------------------------------------------------

User: Sungbin Kim
Changes:
- Made some suggestion for moves in Pokemon.java
- also planning to add pokemon's graphic in the battle mode so added a varaible called "image" in Pokemon.java
	- maybe unnecessary with what I have done today
- added int var selectedPokemon to know which pokemon is selected for a battle
	- use this var to display image of that pokemon
	- but even before it is set up it displays squirtle
	- also im not sure how to prompt user to select a pokemon in the beginning of the battle
		without having to displaying that menu again and again from the second time
		- maybe another while loop?

==============================================================

Date: 2016-01-15
--------------------------------------------------------------

User: Leo Au-Yeung
Changes:
** GOT RID OF CHECKING FOR VALID COMMANDS **
- Instead of checking for valid commands, whenever user inputs
a command, if it's invalid the game will simply do nothing.
However, this may pose a problem during a battle, so what I did
was create a boolean called opponentTurn which will turn true
when a VALID series of commands is executed during a battle.
This creates much less complications than checking for a valid
command because an enemy will simply go when that boolean is true
- The only commands in battle will be numbers and B for back.
So UNLESS the user is stupid and cannot read the screen to see
'1. Fight 2. Bag 3. Pokemon 4. Run' and input a number, the game
should run smoothly
- Started implementing instantiations of Pokemon (user's pkmn, 
wild enemy pkmn)
- Fixed some battle command technicalities
- Instead of starting battle immediately, after player moves, 
method called battleStart?() will check if player is on grass,
and returns whether or not a battle starts

==============================================================

Date: 2016-01-16
--------------------------------------------------------------

User: Sungbin Kim
Changes:
- updated Game.java
	- deleted clearScreen because I think we dont need it. ----- we dont need it because printing out
	 	map or battle already does it for us. this is very nice.
	- deleted displayBattle as well ------- we just need system.out.println
	- added _Pokemon arraylist setup for display of (3) Pokemon on battle screen
	 	- created default constructor in Pokemon.java for initial values that would be displayed.
- added "Default.java" to replace yet uninstantiated pokemons that can return default values for display.
- Implemented display of "3:POKEMON" and the intro screen
- I decided to instantiate map and battle in the global scale so that other methods can refer to them easily

To-do
- get try and catch or something to catch an error within each choice during a battle (ex. when in pokemon
	screen, it doesnt take care of an invalid command )

==============================================================

Date: 2016-01-16
--------------------------------------------------------------

User: Leo Au-Yeung
Changes:
- CHANGED HOW INPUTTING A COMMAND WORKS:
	- global var battleScreen keeps track of which screen
	user is in during battle (main menu, fight, pkmn, etc)
	- displayBattle() will display corresponding screen based
	on int battleScreen
	- executeBattleControl() will take input and execute it 
	based on which screen user is in, and then changes screen
	accordingly after execution
	*this change was mainly done so that even if user inputs an
	invalid command, they will stay on the same screen because
	all these loops/trying to re-prompt makes everything too
	technical/confusing

==============================================================